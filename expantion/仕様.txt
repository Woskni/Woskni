ChangeActiveSelection.cs
{
	カンマ(,)キーで選択しているオブジェクトのアクティブ/非アクティブを切り替えます

	標準でAlt+Shift+Aで上記機能が存在しますが、かなり押しづらいため作成しました
}

ComponentGUI.cs
{
	ヒエラルキーウィンドウの各オブジェクトの右部にコンポーネントの一覧を表示するスクリプトです

	コンポーネントのアイコンは定数からアイコンサイズ・アイコンの透明度を変更可能です
}

DebugHotKey.cs
{
	エディタの再生やリロードのショートカットをF5キーに設定しています

	PlayEditor:
		F5キーの押し込みに反応してシーンを再生します
		再生中の場合はシーンの再生成を行います

	StopEditor:
		再生中にCtrl+F5の検知でシーンの再生を終了します

	PauseEditor:
		再生中にShift+F5の検知でシーンの再生を一時停止します
}

FileCountGUI.cs
{
	プロジェクトウィンドウのフォルダに内蔵ファイル数を表示するスクリプトです
}

Grouping.cs
{
	空のオブジェクトを生成して、選択したオブジェクトの親としてグループ化を行うスクリプトです
	
	CreateWizard:
		Ctrl+Gの検知でグルーピング用ウインドウを立ち上げます

	Grouping:
		上述のグルーピング処理を行います
}

HierarchyLines.cs
{
	ヒエラルキーウインドウの各オブジェクトの親子関係・兄弟関係を罫線素片で明示化するスクリプトです

	罫線素片とは └, ├ のような罫線を描画するための文字列のことを指します
}

RenameSelection.cs
{
	選択したオブジェクトの名前を一括で変更・置換します
	
	CreateWizard:
		名前置換用ウインドウを立ち上げます

	Rename:
		上述の置換処理を行います
		「置換前文字列」が未設定の場合、選択したすべてのオブジェクト名を「置換後文字列」に変更します
}

RenderingMode.cs
{
	スクリプト側からブレンドモードを調べたり設定するためのスクリプトです

	GetAttachedBlend:
		ブレンドモードを設定したマテリアルを返します

	CheckBlendMode:
		引数のマテリアルが、ブレンドモードのいずれに該当するかを返します
}

Screenshot.cs
{
	ゲーム画面のスクリーンショットを撮影するスクリプトです
	
	TakeScreenshot:
		ゲーム画面のスクリーンショットを撮影します。
		撮影した画像はPNG形式でAssets直下に保存されます。
}